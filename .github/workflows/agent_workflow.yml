# .github/workflows/agent_workflow.yml

name: Autonomous Agent Workflow

on:
  # This workflow now runs automatically on a schedule.
  # It runs every 15 minutes to check for new tasks.
  schedule:
    - cron: '*/15 * * * *'
  
  # Manual trigger is kept for testing and demonstration purposes.
  workflow_dispatch:

jobs:
  run-agent:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4

      - name: 2. Agent Logic: Select and Execute Task
        id: agent_logic
        run: |
          # In a real scenario, this script would parse TASKS.md to find the
          # first pending task whose dependencies are met.
          # For now, we are hardcoding it to look for Task 9 or 11.
          
          TASK_ID=""
          if grep -q "9) -" TASKS.md; then
            TASK_ID=9
            TASK_TITLE="Test Agent Automation"
          elif grep -q "11) -" TASKS.md; then
            TASK_ID=11
            TASK_TITLE="Verify Full Automation"
          else
            echo "AGENT: No pending tasks found to execute."
            echo "continue=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "AGENT: Found pending task. Starting work on Task ${TASK_ID}: ${TASK_TITLE}"
          BRANCH_NAME="agent/task-${TASK_ID}"
          
          # Perform the action required by the task
          echo "AGENT: Creating output file for Task ${TASK_ID}"
          echo "# Task ${TASK_ID} Output" > ./task_${TASK_ID}_output.md
          echo "This file was generated by the autonomous agent on $(date)." >> ./task_${TASK_ID}_output.md

          # Update the task status from '-' (Pending) to '~' (In Progress)
          echo "AGENT: Updating TASKS.md status for Task ${TASK_ID}"
          sed -i "s/${TASK_ID}) - /${TASK_ID}) ~ /" TASKS.md
          
          # Set outputs for the next step
          echo "continue=true" >> $GITHUB_OUTPUT
          echo "TASK_ID=${TASK_ID}" >> $GITHUB_OUTPUT
          echo "TASK_TITLE=${TASK_TITLE}" >> $GITHUB_OUTPUT
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_OUTPUT

      - name: 3. Create Pull Request
        if: steps.agent_logic.outputs.continue == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "feat(agent): Complete Task ${{ steps.agent_logic.outputs.TASK_ID }} - ${{ steps.agent_logic.outputs.TASK_TITLE }}"
          branch: ${{ steps.agent_logic.outputs.BRANCH_NAME }}
          delete-branch: true
          title: "Agent PR for Task ${{ steps.agent_logic.outputs.TASK_ID }}: ${{ steps.agent_logic.outputs.TASK_TITLE }}"
          body: |
            This PR was automatically generated by the autonomous agent to complete Task #${{ steps.agent_logic.outputs.TASK_ID }}.

            ## Task Description
            > A test task for the fully automated, schedule-triggered agent to execute.

            ## Acceptance Criteria Checklist
            - [x] The agent creates a file named `task_${{ steps.agent_logic.outputs.TASK_ID }}_output.md`.
            - [x] The agent opens this PR.
            - [x] The status of Task ${{ steps.agent_logic.outputs.TASK_ID }} is updated in `TASKS.md`.
          labels: |
            automated-pr
            agent